name: platform_interface

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the develop branch
on:
  push:
    branches: [ develop, master ]
    paths:
      - 'cached_network_image_platform_interface/**'
  pull_request:
    branches: [ develop ]
    paths:
      - 'cached_network_image_platform_interface/**'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  format:
    name: Format

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    env:
      source-directory: ./cached_network_image_platform_interface

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Make sure the stable version of Flutter is available
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      # Download all Flutter packages
      - name: Download dependencies
        run: flutter pub get
        working-directory: ${{env.source-directory}}

      # Run Flutter Format to ensure formatting is valid
      - name: Run Flutter Format
        run: flutter format --set-exit-if-changed .
        working-directory: ${{env.source-directory}}

  analyze:
    name: Analyze

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    env:
      source-directory: ./cached_network_image_platform_interface

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Make sure the stable version of Flutter is available
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      # Download all Flutter packages
      - name: Download dependencies
        run: flutter pub get
        working-directory: ${{env.source-directory}}

      # Run Flutter Analyzer
      - name: Run Flutter Analyzer
        run: flutter analyze
        working-directory: ${{env.source-directory}}

  tests:
    name: Unit-tests
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    env:
      source-directory: ./cached_network_image_platform_interface

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Make sure the stable version of Flutter is available
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      # Download all Flutter packages
      - name: Download dependencies
        run: flutter pub get
        working-directory: ${{env.source-directory}}

      # Run all unit-tests with code coverage
      - name: Run unit tests
        run: flutter test --coverage
        working-directory: ${{env.source-directory}}

      # Upload code coverage information
      - uses: codecov/codecov-action@v1
        with:
          file: ${{env.source-directory}}/coverage/lcov.info # optional
          name: CachedNetworkImage (Platform interface) # optional
          fail_ci_if_error: true